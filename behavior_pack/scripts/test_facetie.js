// test_facetie.js - simple Node-based tests for FaceTie core and behavior hooks
const FaceTie = require('./main');
const Pools = require('./faceTie_core');
const Hooks = require('./behaviour_hooks');
const Animator = require('./animator');
const fs = require('fs');

console.log('--- FaceTie test start ---');

// Create a test entity
const id = 'test_villager_1';
FaceTie.remember(id, {type:'spawn', info:'test spawn'});
FaceTie.modEmotion(id, 'fear', 20);
FaceTie.modEmotion(id, 'curiosity', 30);

// Simulate a fire event
FaceTie.remember(id, {type:'fire', key:'village_fire', intensity: 5});

console.log('Emotions:', FaceTie.getEmotions(id));

// Call the villager tick handler (generated by behaviour_hooks)
if (typeof Hooks.faceTie_villager_tick === 'function') {
    console.log('Invoking faceTie_villager_tick');
    Hooks.faceTie_villager_tick(id);
} else {
    console.warn('faceTie_villager_tick not found');
}

// Test save/load state
const tmp = '/tmp/facetie_state_test.json';
console.log('Saving state to', tmp, '->', FaceTie.saveState(tmp));
console.log('Clearing in-memory state then loading');
FaceTie._internal.entities.clear();
console.log('Load state ->', FaceTie.loadState(tmp));
console.log('Debug dump:', FaceTie.debugDump(id));

// Test decision logic directly
const decision = FaceTie.decide(id, Pools.villager_fire_decision_pool);
console.log('Decision from villager_fire_decision_pool:', decision);

// Test animator
Animator.applyAnimation(id, Animator.generateEat({chewSpeed:1.2}));

// Test iron golem reaction
const gid = 'test_iron_golem_1';
FaceTie.remember(gid, {type:'spawn', info:'golem spawn'});
FaceTie.remember(gid, {type:'fire', key:'village_fire', intensity:9});
if (typeof Hooks.faceTie_iron_golem_tick === 'function') {
    console.log('Invoking faceTie_iron_golem_tick');
    Hooks.faceTie_iron_golem_tick(gid);
}

console.log('--- FaceTie test end ---');
process.exit(0);
